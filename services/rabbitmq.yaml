apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      #volumes:
      #  - name: rabbitmq-data-storage
      #    persistentVolumeClaim:
      #      claimName: rabbitmq-data-claim
      #  - name: rabbitmq-logs-storage
      #    persistentVolumeClaim:
      #      claimName: rabbitmq-logs-claim
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        #volumeMounts:
        #- mountPath: /var/lib/rabbitmq
        #  name: rabbitmq-data-storage
        #- mountPath: /var/log/rabbitmq
        #  name: rabbitmq-logs-storage
        resources:
          limits:
            memory: "246Mi"
            cpu: "200m"
        ports:
        - containerPort: 5672
        - containerPort: 15672
      priorityClassName: high-priority
---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  type: NodePort
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    protocol: TCP
    port: 5672
    targetPort: 5672
  - name: gui
    protocol: TCP
    port: 80
    targetPort: 15672


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-logs-claim
spec:
  storageClassName: rabbitmq-logs
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-data-claim
spec:
  storageClassName: rabbitmq-data
  resources:
    requests:
      storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
